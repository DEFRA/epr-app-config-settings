trigger: none
pr: none

parameters:
- name: teamName
  displayName: 'Select Environment:'
  type: string
  values:
  - DEV1
  - DEV2
  - DEV3
  - DEV4
  - DEV5
  - DEV6
  - DEV7
  - DEV8
  - DEV9
  - DEV10
  - DEV11
  - DEV12
  - DEV13
  - DEV14
  - DEV15
  - tst
  - preprod
  - prod
- name: serviceName
  displayName: 'Provide the service name'
  type: string
- name: restartApp
  displayName: Restart the application after config change
  type: boolean
  default: true

variables:
- template: templates/env-specific-config.yaml
  parameters:
    teamName: ${{ parameters.teamName }}

- name: settingsDir
  value: $(Build.SourcesDirectory)/${{ lower(variables.environmentName) }}

- name: uppercaseServiceName
  value: ${{ upper(parameters.serviceName) }}

pool: $(agentPool)

jobs:
- job: DeploySettings
  displayName: Deploying settings for ${{ variables.uppercaseServiceName }}
  steps:
    - ${{ if and( ne(parameters.teamName, 'tst'), ne(parameters.teamName, 'preprod'), ne(parameters.teamName, 'preprod2'), ne(parameters.teamName, 'prod'), ne(parameters.teamName, 'DEV8')) }}:
      - task: qetza.replacetokens.replacetokens-task.replacetokens@6
        displayName: 'Replace tokens'
        inputs:
          tokenPattern: custom
          tokenPrefix: '#{{'
          tokenSuffix: '}}'
          missingVarLog: error
          useLegacyPattern: false
          enableTransforms: true
          useLegacyEmptyFeature: false
          sources: |
            dev/DEVRWDWEBFAX401.json => config/DEVRWDWEBFA$(environmentSpoke)401.json
            dev/DEVRWDWEBFAX402.json => config/DEVRWDWEBFA$(environmentSpoke)402.json
            dev/DEVRWDWEBFAX403.json => config/DEVRWDWEBFA$(environmentSpoke)403.json
            dev/DEVRWDWEBFAX404.json => config/DEVRWDWEBFA$(environmentSpoke)404.json
            dev/DEVRWDWEBFAX405.json => config/DEVRWDWEBFA$(environmentSpoke)405.json
            dev/DEVRWDWEBFAX406.json => config/DEVRWDWEBFA$(environmentSpoke)406.json
            dev/DEVRWDWEBFAX407.json => config/DEVRWDWEBFA$(environmentSpoke)407.json
            dev/DEVRWDWEBFAX408.json => config/DEVRWDWEBFA$(environmentSpoke)408.json
            dev/DEVRWDWEBFAX409.json => config/DEVRWDWEBFA$(environmentSpoke)409.json
            dev/DEVRWDWEBFAX410.json => config/DEVRWDWEBFA$(environmentSpoke)410.json
            dev/DEVRWDWEBFAX411.json => config/DEVRWDWEBFA$(environmentSpoke)411.json
            dev/DEVRWDWEBFAX412.json => config/DEVRWDWEBFA$(environmentSpoke)412.json
            dev/DEVRWDWEBWAX401.json => config/DEVRWDWEBWA$(environmentSpoke)401.json
            dev/DEVRWDWEBWAX402.json => config/DEVRWDWEBWA$(environmentSpoke)402.json
            dev/DEVRWDWEBWAX403.json => config/DEVRWDWEBWA$(environmentSpoke)403.json
            dev/DEVRWDWEBWAX404.json => config/DEVRWDWEBWA$(environmentSpoke)404.json
            dev/DEVRWDWEBWAX405.json => config/DEVRWDWEBWA$(environmentSpoke)405.json
            dev/DEVRWDWEBWAX406.json => config/DEVRWDWEBWA$(environmentSpoke)406.json
            dev/DEVRWDWEBWAX407.json => config/DEVRWDWEBWA$(environmentSpoke)407.json
            dev/DEVRWDWEBWAX408.json => config/DEVRWDWEBWA$(environmentSpoke)408.json
            dev/DEVRWDWEBWAX409.json => config/DEVRWDWEBWA$(environmentSpoke)409.json
            dev/DEVRWDWEBWAX410.json => config/DEVRWDWEBWA$(environmentSpoke)410.json
            dev/DEVRWDWEBWAX411.json => config/DEVRWDWEBWA$(environmentSpoke)411.json
            dev/DEVRWDWEBWAX412.json => config/DEVRWDWEBWA$(environmentSpoke)412.json
            dev/DEVRWDWEBWAX413.json => config/DEVRWDWEBWA$(environmentSpoke)413.json
            dev/DEVRWDWEBWAX415.json => config/DEVRWDWEBWA$(environmentSpoke)415.json
            dev/DEVRWDWEBWAA417.json => config/DEVRWDWEBWA$(environmentSpoke)417.json
            dev/DEVRWDWEBWAX418.json => config/DEVRWDWEBWA$(environmentSpoke)418.json
            dev/DEVRWDWEBWAA419.json => config/DEVRWDWEBWA$(environmentSpoke)419.json
            dev/DEVRWDWEBWAA420.json => config/DEVRWDWEBWA$(environmentSpoke)420.json
            dev/DEVRWDWEBWAB417.json => config/DEVRWDWEBWA$(environmentSpoke)417.json
            dev/DEVRWDWEBWAB419.json => config/DEVRWDWEBWA$(environmentSpoke)419.json
            dev/DEVRWDWEBWAB420.json => config/DEVRWDWEBWA$(environmentSpoke)420.json
            dev/DEVRWDWEBWAX421.json => config/DEVRWDWEBWA$(environmentSpoke)421.json
            dev/DEVRWDWEBWAX422.json => config/DEVRWDWEBWA$(environmentSpoke)422.json
            dev/DEVRWDWEBWAX423.json => config/DEVRWDWEBWA$(environmentSpoke)423.json
            dev/DEVRWDWEBWAX424.json => config/DEVRWDWEBWA$(environmentSpoke)424.json
            dev/DEVRWDWEBWAX425.json => config/DEVRWDWEBWA$(environmentSpoke)425.json

    - task: AzureCLI@2
      displayName: Cleaning app settings
      inputs:
        azureSubscription: ${{ variables.subscriptionName }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        failOnStandardError: true
        inlineScript: |
          service=${{ variables.uppercaseServiceName }}
          echo -e "\033[0;32m Cleaning AppSettings on "$service

          ACTIVEAPPSETTINGLIST=$(az webapp config appsettings list -g ${{ variables.webResourceGroupName }} -n $service --query "[].name" -o tsv)
          DELETELIST=" "

          for appsetting in $ACTIVEAPPSETTINGLIST
            do
              case $appsetting in
                APPINSIGHTS_INSTRUMENTATIONKEY|APPLICATIONINSIGHTS_CONNECTION_STRING|ApplicationInsightsAgent_EXTENSION_VERSION )                         echo "$appsetting found in group 1";;
                AzureWbeJobStorage|ConnectionStrings__REDIS_CONNECTION|DOCKER_CUSTOM_IMAGE_NAME|DOCKER_REGISTRY_SERVER_URL )                              echo "$appsetting found in group 2";;
                FUNCTIONS_EXTENSION_VERSION|FUNCTIONS_WORKER_RUNTIME|AzureWebJobsStorage )                                                                echo "$appsetting found in group 3";;
                WEBSITE_CONTENTAZUREFILECONNECTIONSTRING|WEBSITE_CONTENTOVERVNET|WEBSITES_ENABLE_APP_SERVICE_STORAGE )                                    echo "$appsetting found in group 4";;
                WEBSITE_ENABLE_SYNC_UPDATE_SITE|WEBSITE_PULL_IMAGE_OVER_VNET|WEBSITE_CONTENTSHARE|XDT_MicrosoftApplicationInsights_Mode )                 echo "$appsetting found in group 5";;
                *)
                    echo "$appsetting not found, adding to the delete list"
                    DELETELIST=$DELETELIST$appsetting' ';;
              esac
          done
          if [[ "$DELETELIST" != " " ]]
          then
            az webapp config appsettings delete \
              --subscription ${{ variables.subscriptionName }} \
              --name $service \
              --resource-group ${{ variables.webResourceGroupName }} \
              --setting-names {$DELETELIST} \
              --only-show-errors
          else
            echo "Nothing to remove for $service"
          fi

        ${{ if and( ne(parameters.teamName, 'tst'), ne(parameters.teamName, 'preprod'), ne(parameters.teamName, 'preprod2'), ne(parameters.teamName, 'prod'), ne(parameters.teamName, 'DEV8')) }}:
          workingDirectory: $(Pipeline.Workspace)/s/dev/config
        ${{ else }}:
          workingDirectory: $(settingsDir)

    - task: AzureCLI@2
      displayName: Updating ${{ variables.uppercaseServiceName }}
      inputs:
        azureSubscription: ${{ variables.subscriptionName }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az webapp config appsettings set \
            --subscription ${{ variables.subscriptionName }} \
            -g ${{ variables.webResourceGroupName }} \
            -n ${{ variables.uppercaseServiceName }} \
            --settings @./${{ variables.uppercaseServiceName }}.json \
            --debug 
        ${{ if and( ne(parameters.teamName, 'tst'), ne(parameters.teamName, 'preprod'), ne(parameters.teamName, 'preprod2'), ne(parameters.teamName, 'prod'), ne(parameters.teamName, 'DEV8')) }}:
          workingDirectory: $(Pipeline.Workspace)/s/dev/config
        ${{ else }}:
          workingDirectory: $(settingsDir)

    - ${{ if eq( parameters.restartApp, 'true') }}:
      - task: AzureCLI@2
        displayName: Restarting ${{ variables.uppercaseServiceName }}
        inputs:
          azureSubscription: ${{ variables.subscriptionName }}
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            cat ./${{ variables.uppercaseServiceName }}.json
            az webapp restart \
              --name ${{ variables.uppercaseServiceName }} \
              --resource-group ${{ variables.webResourceGroupName }} \
              --subscription ${{ variables.subscriptionName }}